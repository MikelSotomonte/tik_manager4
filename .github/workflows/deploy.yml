name: Build and Release

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install -r ./package/requirements.txt

    - name: Install Inno Setup
      run: |
        curl -L -o innosetup.exe "https://jrsoftware.org/download.php/is.exe"
        cmd /c "innosetup.exe /VERYSILENT /NORESTART"

    - name: Read VERSION file
      id: read_version
      run: |
        FOR /F "delims=" %%A IN (VERSION) DO @SET VERSION=%%A
        echo VERSION=$VERSION >> $GITHUB_ENV

    - name: Display the version
      run: echo The version is $env:VERSION

#    - name: Build and Package
#      run: |
#        cd package
#        ./make release
#
#    - name: Debug Version Value
#      run: echo "VERSION=${{ env.TIK_VERSION }}"
#
#    - name: List Build Directory
#      run: dir package\build
#      shell: cmd
#
#    - name: Verify the Built File
#      run: |
#        if not exist "package\build\TikManager4_v${{ env.TIK_VERSION }}.exe" exit 1
#      shell: cmd
#
#    - name: Upload Release Assets
#      uses: actions/upload-artifact@v3
#      with:
#        name: TikManager4
#        path: package/build/TikManager4_v${{ env.TIK_VERSION }}.exe
#
#    - name: Create GitHub Release
#      uses: ncipollo/release-action@v1
#      with:
#        artifacts: package/build/TikManager4_v${{ env.TIK_VERSION }}.exe
#        token: ${{ secrets.GITHUB_TOKEN }}
#        tag: ${{ github.ref_name }}
#        name: Release ${{ github.ref_name }}
#        body: |
#          Automated release for version ${{ github.ref_name }}.
