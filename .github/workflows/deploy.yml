name: Build and Release

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Adjust to your version

    - name: Install dependencies
      run: pip install -r ./package/requirements.txt

    - name: Install Inno Setup
      run: |
        curl -L -o innosetup.exe "https://jrsoftware.org/download.php/is.exe"
        cmd /c "innosetup.exe /VERYSILENT /NORESTART"

    - name: Extract Version
      id: extract_version
      run: |
        python -c "from tik_manager4 import _version; print(_version.__version__)" > version.txt
        set /p VERSION=<version.txt

    - name: Build and package
      run: |
        cd package
        ./make release

    - name: Verify the built file
      run: |
        set FILE=TikManager4_v%VERSION%.exe
        if not exist "package/build/%FILE%" exit 1
      shell: cmd

    - name: Upload Release Assets
      uses: actions/upload-artifact@v3
      with:
        name: TikManager4
        path: package/build/TikManager4_v${{ steps.extract_version.outputs.VERSION }}.exe

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: path-to-your-built-exe-or-installer
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          Automated release for version ${{ github.ref_name }}.
